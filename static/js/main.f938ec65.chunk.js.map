{"version":3,"sources":["components/About.js","components/Maps.js","components/Search.js","components/FoodTruck.js","components/CarouselContainer.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","Maps","location","foodTruck","information","useState","latitude","longitude","width","height","zoom","viewport","setViewport","useEffect","undefined","parseFloat","markers","map","truck","objectid","mapboxApiAccessToken","mapStyle","onViewportChange","Search","setInputValue","foodTruckOnChange","type","placeholder","value","onChange","FoodTruck","setFoodTruck","setLocation","setInformation","inputValue","list","setList","fetch","then","data","json","foodItem","filter","Number","food","fooditems","catch","err","console","log","filteredList","filteredNames","onClick","newInformation","applicant","toLowerCase","indexOf","Row","Col","xs","event","target","CarouselContainer","Carousel","fade","style","minHeight","item","Item","maxHeight","objectFit","overflow","src","webImage","url","id","Navigation","Navbar","collapseOnSelect","variant","expand","Brand","color","as","Link","to","Toggle","aria-controls","Collapse","Nav","href","App","rel","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f938ec65.chunk.js","sourcesContent":["import React from 'react';\n\nconst About = () => {\n    return (\n        <div className=\"About\">\n            <h1>About Page</h1>\n        </div>\n    );\n};\n\nexport default About;","import React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker } from \"react-map-gl\"\n\nconst Maps = ({ location, foodTruck, information }) => {\n\tconst [viewport, setViewport] = useState({\n\t\t\tlatitude: 37.73944545286909,\n\t\t\tlongitude: -122.39301498669842,\n\t\t\twidth: '73.3vw',\n\t\t\theight: '75vh',\n\t\t\tzoom: 11\n\t\t});\n\n\tuseEffect(() => {\n\t\tif (location[0] !== undefined || 0) {\n\t\t\tsetViewport({\n\t\t\t\tlatitude: parseFloat(location[0]),\n\t\t\t\tlongitude: parseFloat(location[1]),\n\t\t\t\twidth: '73.3vw',\n\t\t\t\theight: '75vh',\n\t\t\t\tzoom: 18\n\t\t\t});\n\t}\n\t}, [location])\n\n\t\tlet markers = foodTruck.map((truck) => {\n\t\t\tif (truck.latitude !== location[0]) {\n\t\t\t\treturn (\n\t\t\t\t\t<Marker\n\t\t\t\t\t\tclassName='smallMarker'\n\t\t\t\t\t\tkey={truck.objectid}\n\t\t\t\t\t\tlongitude={parseFloat(truck.longitude)}\n\t\t\t\t\t\tlatitude={parseFloat(truck.latitude)}>\n\t\t\t\t\t</Marker>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\n    return (\n\t\t\t<div className='mapDiv'>\n\t\t\t\t<ReactMapGL className='map'\n\t\t\t\t\t{...viewport}\n\t\t\t\t\tmapboxApiAccessToken='pk.eyJ1IjoiZHlsYW5kcmVjaHNlbCIsImEiOiJja20zbXU4MXAxajhiMm9xbXVrMW01dGNrIn0.Ql2dpSmE-S6Q0FgbY0iqjg'\n\t\t\t\t\tmapStyle='mapbox://styles/dylandrechsel/ckm3pch0w220218qt4l0ud8yb'\n\t\t\t\t\tonViewportChange={(viewport) => {\n\t\t\t\t\t\tsetViewport(viewport);\n\t\t\t\t\t}}>\n\t\t\t\t\t<Marker\n\t\t\t\t\t\tclassName='marker'\n\t\t\t\t\t\tlongitude={parseFloat(information.longitude)}\n\t\t\t\t\t\tlatitude={parseFloat(information.latitude)}>\n\t\t\t\t\t</Marker>\n\n\t\t\t\t\t{markers}\n\t\t\t\t</ReactMapGL>\n\t\t\t</div>\n\t\t);\n};\n\nexport default Maps;","import React from 'react';\n\nconst Search = ({ setInputValue, foodTruckOnChange }) => {\n    return (\n\t\t\t<div>\n\t\t\t\t<input className=\"search\" type='text' placeholder='Search for foodtruck!' value={setInputValue} onChange={foodTruckOnChange} />\n\t\t\t</div>\n\t\t);\n};\n\nexport default Search;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Maps from './Maps'\nimport { Row, Col } from 'react-bootstrap';\nimport Search from './Search'\n\nconst FoodTruck = () => {\n    const [foodTruck, setFoodTruck] = useState([])\n\tconst [location, setLocation] = useState([])\n\tconst [information, setInformation] = useState({\n\t\tlongitude: 0,\n\t\tlatitude: 0\n\t})\n\tconst [inputValue, setInputValue] = useState({\n\t\tinputValue: ''\n\t})\n\tconst [list, setList] = useState([])\n\n    useEffect(() => {\n        fetch('https://data.sfgov.org/resource/6a9r-agq8.json')\n\t\t\t.then((data) => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\n\t\t\t\tif (foodTruck !== data) {\n\t\t\t\t\t\t\t\n                // getting rid of all keys that dont have a longitude and latitude\n\t\t\t\t\tlet locations = data.filter(\n\t\t\t\t\t\t(location) =>\n\t\t\t\t\t\t\tNumber(location.latitude) !== 0 ||\n\t\t\t\t\t\t\tNumber(location.longitude) !== 0\n\t\t\t\t\t);\n\t\t\t\t\t\t\t\n\t\t\t\t\t// getting rid of all keys that dont have a food description\n\t\t\t\t\tlet foodItem = locations.filter(\n\t\t\t\t\t\t(food) => \n\t\t\t\t\t\t\t(food.fooditems) !== undefined\n\t\t\t\t\t)\n\t\t\t\t\tsetFoodTruck(foodItem);\n\t\t\t}})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t}, [])\n\t\t\t\t\n\tuseEffect(() => {\n\t\tif (inputValue.inputValue !== '') {\n\t\t\tconst filteredList = filteredNames.map((truck) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={truck.objectid}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetLocation([truck.latitude, truck.longitude]);\n\t\t\t\t\t\t\t\tconst newInformation = {\n\t\t\t\t\t\t\t\t\tlatitude: truck.latitude,\n\t\t\t\t\t\t\t\t\tlongitude: truck.longitude,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tsetInformation(newInformation);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<h2>{truck.applicant}</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p>{truck.fooditems}</p>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\t\t\tsetList(filteredList)\n\t\t} else {\n\t\t\tconst list = filteredNames.map((truck) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={truck.objectid}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetLocation([truck.latitude, truck.longitude]);\n\t\t\t\t\t\t\t\tconst newInformation = {\n\t\t\t\t\t\t\t\t\tlatitude: truck.latitude,\n\t\t\t\t\t\t\t\t\tlongitude: truck.longitude,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tsetInformation(newInformation);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<h2>{truck.applicant}</h2>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<p>{truck.fooditems}</p>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\t\t\tsetList(list)\n\n\t\t}\n\t\t\t\t\t\t\n\t}, [foodTruck, inputValue]) // add foodTruck because list would render before fetch was completed\n\n\tlet filteredNames = foodTruck.filter((truck) => {\n\t\treturn truck.applicant.toLowerCase().indexOf(inputValue.inputValue.toLowerCase()) !== -1;\n\t})\n\n\tconst foodTruckOnChange = (event) => {\n\t\tsetInputValue({\n\t\t\tinputValue: event.target.value\n\t\t})\n\t}\n\n    return (\n\t\t\t\t<Row>\n\t\t\t\t\n\t\t\t\t\t<Col xs={3}>\n\t\t\t\t\t\t<div className=\"searchDiv\"><Search foodTruck={foodTruck} inputValue={inputValue} foodTruckOnChange={foodTruckOnChange}/></div>\n\t\t\t\t\t\t<div className='scrollbar' className='foodtruck'>{list}</div>\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col xs={9}>\n\t\t\t\t\t\t<Maps\n\t\t\t\t\t\t\tlocation={location}\n\t\t\t\t\t\t\tfoodTruck={foodTruck} \n\t\t\t\t\t\t\tinformation={information}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\n\t\t\t\t</Row>\n\t\t);\n};\n\nexport default FoodTruck;","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport data from '../data.json';\n\nconst CarouselContainer = () => {\n\treturn (\n\t\t<div className='mainCarousel'>\n\t\t\t<Carousel fade style={{ minHeight: '10vh' }}>\n\t\t\t\t{data.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Carousel.Item key={item.id} style={{ maxHeight: '30vh' }}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='d-block w-100'\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\theight: '23vh',\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\n\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsrc={item.webImage.url}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Carousel.Item>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Carousel>\n\t\t</div>\n\t);\n};\n\nexport default CarouselContainer;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = () => {\n\treturn (\n\t\t<Navbar\n\t\t\tclassName='Nav'\n\t\t\tstyle={{ maxHeight: '3vh' }}\n\t\t\tcollapseOnSelect\n\t\t\tvariant='light'\n\t\t\texpand='md'>\n\t\t\t<Navbar.Brand\n\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\tas={Link}\n\t\t\t\tto='/street-food-api'>\n\t\t\t\t<b>FoodTrucks</b>\n\t\t\t</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\n\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\n\t\t\t\t<Nav>\n\t\t\t\t\t<Nav.Link style={{ color: 'white' }} as={Link} to='/about'>\n\t\t\t\t\t\t<b>About</b>\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t<Nav.Link style={{ color: 'white' }} as={Link} to='/contact'>\n\t\t\t\t\t\t<b>Contact</b>\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t\t\n\t\t\t\t<Nav className='ml-auto'>\n\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\tclassName='github'\n\t\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t\t\thref='https://github.com/DylanDrechsel'>\n\t\t\t\t\t\t<b>GitHub</b>\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom'\nimport About from './components/About'\nimport FoodTruck from './components/FoodTruck'\nimport CarouselContainer from './components/CarouselContainer'\nimport Navigation from './components/Navigation';\n\n\nfunction App() {\n  return (\n\t\t<div className='App'>\n\t\t\t<link\n\t\t\t\thref='https://api.mapbox.com/mapbox-gl-js/v2.1.1/mapbox-gl.css'\n\t\t\t\trel='stylesheet'\n\t\t\t/>\n\n\t\t\t<Navigation />\n\t\t\t<CarouselContainer />\n\n\t\t\t<main>\n\t\t\t\t<Route path='/' exact component={FoodTruck} />\n\n\t\t\t\t<Route\n\t\t\t\t\tpath='https://dylandrechsel.github.io/street-food-api/'\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={FoodTruck}\n\t\t\t\t/>\n\n\t\t\t\t<Route path='/about' component={About} />\n\n\t\t\t\t<Route path='/contact' component={About} />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'; \n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}